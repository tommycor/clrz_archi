/* 
  custom labels styling for checkboxes/radios
  Basically we use the <label> :before & :after to create a false checkbox or radio,
  pure css style
  we specify :checked to support < IE9 (as it's not supported it fallbacks to default system styles)
*/

// Base for label styling

input[type="checkbox"]:not(:checked),
input[type="checkbox"]:checked,
input[type="radio"]:not(:checked),
input[type="radio"]:checked {
  position: absolute;
  left: -9999px;
}

input[type="checkbox"]:not(:checked) + label,
input[type="checkbox"]:checked + label,
input[type="radio"]:not(:checked) + label,
input[type="radio"]:checked + label {
  display: block;
  position: relative;
  padding-left: 25px;
  cursor: pointer;
  line-height: 33px;
  margin-bottom: 5px;
  font-size: 12px;
  line-height: 15px;
}

// checkbox / radios aspect

input[type="checkbox"]:not(:checked) + label:before,
input[type="checkbox"]:checked + label:before,
input[type="radio"]:not(:checked) + label:before,
input[type="radio"]:checked + label:before {
  content: '';
  position: absolute;
  left:0;
  top: -1px;
  width: 15px;
  height: 15px;
  border: 2px solid $black;
  background: none;
}

input[type="radio"] + label:before{
  border-radius: 50%;
}

// checked mark aspect
// instead of a symbol it could be a svg as background url-encoded, or a character from your icon font

input[type="checkbox"]:not(:checked) + label:after,
input[type="checkbox"]:checked + label:after,
input[type="radio"]:not(:checked) + label:after,
input[type="radio"]:checked + label:after {
  content: "✓";
  position: absolute;
  top: -3px;
  left: -1px;
  font-size: 28px;
  color: $black;
  transition: all .2s;
}

// override symbol for radios

input[type="radio"]:not(:checked) + label:after,
input[type="radio"]:checked + label:after {
  content: '•';
  font-size: 36px;
  left: -3px;
}

// checked mark aspect changes

input[type="checkbox"]:not(:checked) + label:after,
input[type="radio"]:not(:checked) + label:after {
  opacity: 0;
  transform: scale(0);
}
input[type="checkbox"]:checked + label:after,
input[type="radio"]:checked + label:after {
  opacity: 1;
  transform: scale(1);
}

// disabled checkbox

input[type="checkbox"]:disabled:not(:checked) + label:before,
input[type="checkbox"]:disabled:checked + label:before {
  box-shadow: none;
  border-color: #bbb;
  background-color: #ddd;
}
input[type="checkbox"]:disabled:checked + label:after {
  color: #999;
}
input[type="checkbox"]:disabled + label {
  color: #aaa;
}

// disabled radio

input[type="radio"]:disabled:not(:checked) + label:before,
input[type="radio"]:disabled:checked + label:before {
  box-shadow: none;
  border-color: #bbb;
  background-color: #ddd;
}
input[type="radio"]:disabled:checked + label:after {
  color: #999;
}
input[type="radio"]:disabled + label {
  color: #aaa;
}

// accessibility : should probably indicate focus states for keyboard navigation

input[type="checkbox"]:checked:focus + label:before,
input[type="checkbox"]:not(:checked):focus + label:before {
  //border: 1px solid #ddd;
}

input[type="radio"]:checked:focus + label,
input[type="radio"]:not(:checked):focus + label {
  //border: 1px solid #ddd;
}
